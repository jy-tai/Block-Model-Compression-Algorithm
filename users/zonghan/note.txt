(This is just a draft, a record during the design process)

现在已有：一个存放了所有数据的inBuffer

实现：将数据分块，并以“x,y,z,size_x,size_y,size_z,颜色标签”的格式输出

先将父块设为2*1*1
然后2*2*1
然后2*2*2
然后3*2*2

需要用公式表示出两次父块之间有哪些体素需要检查
增长边*固定边1*固定边2


广度优先(3维)贪婪：
	1. 设定初始size为1*1*1
	2. 沿着x->y->z的顺序游走，每次在当前维度上+1
	3. 如果当前维度已越界，标记为"hit"
	4. 尝试完成该+1（计算所有多出来的voxel是不是都可以merge）。
		如果成功，跳到下一个维度。
		如果失败，标记该维度为"hit"，跳到下一个维度
	当所有维度都hit时，结束本次merge。
	从下一个起始点开始新一轮（寻找起始点的方式与深度greedy相同）

	层1：当前merge轮 (当z没越界时)
		跳过已处理的voxel
		层2：x->y->z顺次+1  (当没hit时)
			判断：达到边界，达到parent block size最大值
			层3：xyz三重循环，求merge (当没hit时)
				判断：遇到不同颜色
			更新下次+1的维度
		更新正确起点位置

	三种hit：
		1. 达到边界
		2. 达到parent block size最大值
		3. 遇到不同颜色